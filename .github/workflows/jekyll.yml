# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        run: |
          sudo /bin/bash -c "
          apt-get update && \
          apt-get install -y wget bzip2 python3-pip supervisor && \
          apt-get clean && \
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
          bash /tmp/miniconda.sh -b -p /opt/miniconda && \
          rm /tmp/miniconda.sh && \
          export PATH='/opt/miniconda/bin:$PATH' && \
          conda init bash && \
          bash -c 'source ~/.bashrc && conda install -c conda-forge -c anaconda python=3.10  gcc=11.3 gcc_linux-64=11.3 gfortran=11.3  gxx=11.3 sysroot_linux-64=2.28 go cmake make automake autoconf glib expat libnetcdf zlib nodejs ruby' && \
          source ~/.bashrc
          ln -s $CONDA_PREFIX/lib $CONDA_PREFIX/lib64 && \
          export CUDA_HOME=$CONDA_PREFIX && \
          export XLA_FLAGS=$CONDA_PREFIX && \
          export LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$CONDA_PREFIX/lib64 && \
          export CFLAGS='-I$CONDA_PREFIX/include' && \
          export CXXFLAGS='-I$CONDA_PREFIX/include' && \
          export CPPFLAGS='-I$CONDA_PREFIX/include' && \
          export CC=$CONDA_PREFIX/bin/gcc && \
          export CXX=$CONDA_PREFIX/bin/g++ && \
          export LDFLAGS='-L$CONDA_PREFIX/lib -L$CONDA_PREFIX/lib64' && \
          gem install bundler jekyll && \
          chmod -R 777 /opt/miniconda && \
          ln -s $CONDA_PREFIX/bin/bundle /bin/ && \
          ln -s $CONDA_PREFIX/bin/jekyll /bin/ && \"
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: |
          sudo /bin/bash -c "
          export PATH='/opt/miniconda/bin:$PATH' && \
          source ~/.bashrc && \
          bundle exec jekyll build --baseurl '${{ steps.pages.outputs.base_path }}'"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
